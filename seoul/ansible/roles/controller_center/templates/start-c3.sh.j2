#!/bin/bash

CONFLUENT_HOME="/engn/confluent-control-center-next-gen-2.2.0"
SERVER_NAME="c3"
PROPERTIES_FILE="${CONFLUENT_HOME}/properties/control-center.properties"

DATA_DIR="/data/control-center"
LOG_DIR="/logs/control-center"
export LOG_DIR

### java home
export JAVA_HOME="/home/ubuntu/jdk-17.0.8+7"

######################################################################

### memory options
CONTROL_CENTER_HEAP_OPTS="${CONTROL_CENTER_HEAP_OPTS} -Xms4G -Xmx4G"
export CONTROL_CENTER_HEAP_OPTS

### performance
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -server"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:MetaspaceSize=96m"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:+UseG1GC"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:MaxGCPauseMillis=20"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:InitiatingHeapOccupancyPercent=35"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:G1HeapRegionSize=16M"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:MinMetaspaceFreeRatio=50"
CONTROL_CENTER_JVM_PERFORMANCE_OPTS="${CONTROL_CENTER_JVM_PERFORMANCE_OPTS} -XX:MaxMetaspaceFreeRatio=80"
export CONTROL_CENTER_JVM_PERFORMANCE_OPTS

### generic jvm settings
CONTROL_CENTER_OPTS="${CONTROL_CENTER_OPTS} -D${SERVER_NAME}"
export CONTROL_CENTER_OPTS

### gc option
export GC_LOG_ENABLED="true"

### jmx
#export JMX_PORT=""
CONTROL_CENTER_JMX_OPTS="${CONTROL_CENTER_JMX_OPTS} -Dcom.sun.management.jmxremote"
CONTROL_CENTER_JMX_OPTS="${CONTROL_CENTER_JMX_OPTS} -Dcom.sun.management.jmxremote.authenticate=false"
CONTROL_CENTER_JMX_OPTS="${CONTROL_CENTER_JMX_OPTS} -Dcom.sun.management.jmxremote.ssl=false "
export CONTROL_CENTER_JMX_OPTS

### log4j
CONTROL_CENTER_LOG4J_OPTS="${CONTROL_CENTER_LOG4J_OPTS} -Dlog4j.configuration=file:${CONFLUENT_HOME}/properties/control-center-log4j.properties"
export CONTROL_CENTER_LOG4J_OPTS

######################################################################

### check current user
#CURRENT_USER="$(id -un)"
#if [ "${CURRENT_USER}" == "root" ]; then
#    echo "[ERROR] The current user is root!"
#    exit
#fi

### check running process
PID="$(pgrep -xa java | grep ${PROPERTIES_FILE} | grep ${SERVER_NAME} | awk '{print $1}')"
if [ -n "${PID}" ]; then
    echo "[ERROR] The ${SERVER_NAME} (pid ${PID}) is already running!"
    exit
fi

### create data and log dirs
if [ ! -d "${DATA_DIR}" ]; then
    mkdir -p ${DATA_DIR}
fi
if [ ! -d "${LOG_DIR}" ]; then
    mkdir -p ${LOG_DIR}
fi

#nohup ${CONFLUENT_HOME}/bin/control-center-start ${PROPERTIES_FILE} 1>/dev/null 2>&1 &
nohup ${CONFLUENT_HOME}/bin/control-center-start ${PROPERTIES_FILE} > ${LOG_DIR}/nohup.${SERVER_NAME}.out 2>&1 &
